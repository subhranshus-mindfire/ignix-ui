"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[385],{1385:(e,n,a)=>{a.d(n,{A:()=>t});a(6540);var i=a(2467);const s={none:"0",small:"0.5rem",normal:"1rem",comfortable:"1.5rem",large:"2rem"},t=({children:e,minItemWidth:n="200px",maxColumns:a,gap:t="normal",balanced:l=!1,className:r=""})=>{const d=s[t]||t,c={display:"grid",gap:d,gridTemplateColumns:`repeat(auto-fit, minmax(${n}, 1fr))`,alignItems:l?"stretch":"start",maxWidth:a?`calc(${a} * ${n} + (${a} - 1) * ${d})`:"100%"};return(0,i.jsx)("div",{style:c,className:`auto-grid mx-auto ${r}`,children:e})}},4327:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>x,default:()=>v,frontMatter:()=>h,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"layouts/auto-grid","title":"AutoGrid","description":"A self-calculating grid layout that automatically adapts column count based on available space and minimum item width.","source":"@site/versioned_docs/version-1.0.3/layouts/auto-grid.mdx","sourceDirName":"layouts","slug":"/layouts/auto-grid","permalink":"/ignix-ui/docs/layouts/auto-grid","draft":false,"unlisted":false,"tags":[],"version":"1.0.3","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"AutoGrid","description":"A self-calculating grid layout that automatically adapts column count based on available space and minimum item width."},"sidebar":"tutorialSidebar","previous":{"title":"AspectRatio","permalink":"/ignix-ui/docs/layouts/aspect-ratio"},"next":{"title":"Box","permalink":"/ignix-ui/docs/layouts/box"}}');var s=a(2467),t=a(8453),l=a(1211),r=a(85),d=a(1385),c=a(6540),o=a(9465),m=a(2036);const u=()=>{const[e,n]=(0,c.useState)("200px"),[a,i]=(0,c.useState)(4),[t,u]=(0,c.useState)("normal"),[h,x]=(0,c.useState)(!1),p=`\n<AutoGrid \n  minItemWidth="${e}" \n  maxColumns={${a}} \n  gap="${t}" \n  balanced={${h}}\n>\n  {items.map((item, i) => (\n    <div key={i} className="bg-gray-200 p-6 rounded-lg shadow text-center">\n      Item {i + 1}\n    </div>\n  ))}\n</AutoGrid>\n`;return(0,s.jsxs)("div",{className:"space-y-6 mb-8",children:[(0,s.jsxs)("div",{className:"flex flex-wrap gap-4 justify-start sm:justify-end",children:[(0,s.jsx)("div",{className:"space-y-2",children:(0,s.jsx)(o.A,{variants:["none","small","normal","comfortable","large"],selectedVariant:t,onSelectVariant:u,type:"Gap"})}),(0,s.jsx)("div",{className:"space-y-2",children:(0,s.jsx)(o.A,{variants:["120px","160px","200px","240px","300px"],selectedVariant:e,onSelectVariant:n,type:"Min Item Width"})}),(0,s.jsx)("div",{className:"space-y-2",children:(0,s.jsx)(o.A,{variants:["2","3","4","5","6"],selectedVariant:String(a),onSelectVariant:e=>i(Number(e)),type:"Max Columns"})}),(0,s.jsx)("div",{className:"space-y-2",children:(0,s.jsx)(o.A,{variants:["true","false"],selectedVariant:String(h),onSelectVariant:e=>x("true"===e),type:"Balanced"})})]}),(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"preview",label:"Preview",children:(0,s.jsx)("div",{className:"border p-6 rounded-lg",children:(0,s.jsx)(d.A,{minItemWidth:e,maxColumns:a,gap:t,balanced:h,children:["bg-red-600","bg-red-600","bg-red-600","bg-red-600","bg-red-600","bg-red-600"].map((e,n)=>(0,s.jsxs)("div",{className:`${e} text-white p-6 rounded-lg shadow-md text-center`,children:["Item ",n+1]},n))})})}),(0,s.jsx)(r.A,{value:"code",label:"Code",children:(0,s.jsx)("div",{className:"mt-4",children:(0,s.jsx)(m.A,{language:"tsx",className:"text-sm",children:p})})})]})]})},h={sidebar_position:7,title:"AutoGrid",description:"A self-calculating grid layout that automatically adapts column count based on available space and minimum item width."},x=void 0,p={},g=[{value:"Overview",id:"overview",level:2},{value:"Preview",id:"preview",level:2},{value:"Installation",id:"installation",level:2},{value:"Variants",id:"variants",level:2},{value:"Usage",id:"usage",level:2},{value:"Responsive Gallery",id:"responsive-gallery",level:3},{value:"Tags or Categories",id:"tags-or-categories",level:3},{value:"Props",id:"props",level:2}];function j(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"AutoGrid"})," component automatically determines the number of columns based on the available container width and a defined minimum item width.",(0,s.jsx)(n.br,{}),"\n","It\u2019s ideal for dynamic content, responsive galleries, and layouts where the number of items is unknown."]}),"\n",(0,s.jsx)(n.h2,{id:"preview",children:"Preview"}),"\n",(0,s.jsxs)(l.A,{defaultValue:"preview",children:[(0,s.jsx)(r.A,{value:"preview",label:"Preview",default:!0,children:(0,s.jsx)("div",{className:"p-4 border rounded-lg",children:(0,s.jsxs)(d.A,{minItemWidth:"150px",maxColumns:4,gap:"normal",balanced:!0,children:[(0,s.jsx)("div",{className:"bg-red-600 text-white p-4 rounded",children:"Item 1"}),(0,s.jsx)("div",{className:"bg-red-600 text-white p-4 rounded",children:"Item 2"}),(0,s.jsx)("div",{className:"bg-red-600 text-white p-4 rounded",children:"Item 3"}),(0,s.jsx)("div",{className:"bg-red-600 text-white p-4 rounded",children:"Item 4"}),(0,s.jsx)("div",{className:"bg-red-600 text-white p-4 rounded",children:"Item 5"}),(0,s.jsx)("div",{className:"bg-red-600 text-white p-4 rounded",children:"Item 6"})]})})}),(0,s.jsx)(r.A,{value:"code",label:"Code",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import AutoGrid from \'./components/ui\';\n\nfunction Example() {\n  return (\n    <AutoGrid minItemWidth="150px" maxColumns={4} gap="normal" balanced>\n      <div>Item 1</div>\n      <div>Item 2</div>\n      <div>Item 3</div>\n      <div>Item 4</div>\n    </AutoGrid>\n  );\n}\n'})})})]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"npm",label:"npm",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx @mindfiredigital/ignix-ui add auto-grid\n"})})}),(0,s.jsx)(r.A,{value:"yarn",label:"yarn",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yarn @mindfiredigital/ignix-ui add auto-grid\n"})})}),(0,s.jsx)(r.A,{value:"pnpm",label:"pnpm",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pnpm @mindfiredigital/ignix-ui add auto-grid\n"})})}),(0,s.jsx)(r.A,{value:"manual",label:"manual",className:"max-h-[500px] overflow-y-auto",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import React, { ReactNode, CSSProperties } from "react";\n\ntype Gap = "none" | "small" | "normal" | "comfortable" | "large" | string;\n\ninterface AutoGridProps {\nchildren: ReactNode;\nminItemWidth?: string; // e.g. "200px"\nmaxColumns?: number;   // max number of columns\ngap?: Gap;             // spacing between grid items\nbalanced?: boolean;    // balance row heights\nclassName?: string;\n}\n\nconst gapMap: Record<Exclude<Gap, string>, string> = {\nnone: "0",\nsmall: "0.5rem",\nnormal: "1rem",\ncomfortable: "1.5rem",\nlarge: "2rem",\n};\n\nconst AutoGrid: React.FC<AutoGridProps> = ({\nchildren,\nminItemWidth = "200px",\nmaxColumns,\ngap = "normal",\nbalanced = false,\nclassName = "",\n}) => {\nconst computedGap = gapMap[gap as keyof typeof gapMap] || gap;\n\nconst style: CSSProperties = {\ndisplay: "grid",\ngap: computedGap,\ngridTemplateColumns: `repeat(auto-fit, minmax(${minItemWidth}, 1fr))`,\nalignItems: balanced ? "stretch" : "start",\nmaxWidth: maxColumns\n  ? `calc(${maxColumns} * ${minItemWidth} + (${maxColumns} - 1) * ${computedGap})`\n  : "100%",\n};\n\nreturn (\n<div style={style} className={`auto-grid mx-auto ${className}`}>\n  {children}\n</div>\n);\n};\n\nexport default AutoGrid;\n\n'})})})]}),"\n",(0,s.jsx)(n.h2,{id:"variants",children:"Variants"}),"\n","\n",(0,s.jsx)(u,{}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"responsive-gallery",children:"Responsive Gallery"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'function Gallery() {\n  return (\n    <AutoGrid minItemWidth="200px" maxColumns={6} gap="small" balanced>\n      {images.map((src, i) => (\n        <img key={i} src={src} className="rounded shadow" />\n      ))}\n    </AutoGrid>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tags-or-categories",children:"Tags or Categories"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'function TagList({ tags }) {\n  return (\n    <AutoGrid minItemWidth="120px" gap="comfortable">\n      {tags.map((tag, i) => (\n        <span key={i} className="px-3 py-1 rounded bg-gray-200">\n          {tag}\n        </span>\n      ))}\n    </AutoGrid>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"minItemWidth"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"200px"'})}),(0,s.jsx)(n.td,{children:"Minimum width of each grid item before wrapping."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"maxColumns"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Infinity"})}),(0,s.jsx)(n.td,{children:"Maximum number of columns allowed."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"gap"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"small" | "normal" | "large" | string'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"normal"'})}),(0,s.jsx)(n.td,{children:"Gap between grid items."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"balanced"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Ensures balanced column heights (ideal for masonry-like layouts)."})]})]})]})]})}function v(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}}}]);